;;; PRE-CONFIG
; save all the custom config that emac does into a separate file & load it
(setq custom-file "~/.emacs.d/custom-emacs.el")
(load-file custom-file)
(require 'package)
(setq package-archives
      '(("gnu"   . "https://elpa.gnu.org/packages/")
        ("melpa" . "https://melpa.org/packages/")))
(package-initialize)

;;; PDF & EPUB
;; EPUB
(use-package nov
  :ensure t
  :mode ("\\.epub\\'" . nov-mode)
  :config
  (add-hook 'nov-mode-hook
            (lambda ()
              (visual-line-mode 1)
              (setq nov-text-width 80)
              (setq line-spacing 0.25))))
;; Disable line numbers in PDF buffers
(add-hook 'pdf-view-mode-hook (lambda () (display-line-numbers-mode 0)))
;; Disable line numbers in EPUB buffers
(add-hook 'nov-mode-hook (lambda () (display-line-numbers-mode 0)))

;; PDF
(use-package pdf-tools
  :ensure t
  :config
  (pdf-tools-install))


;;; GENERAL
(use-package magit
  :ensure t
  :bind ("C-x g" . magit-status))

;;; UI
(setq inhibit-startup-message t)   ; Disable splast screen
; (setq-default frame-title-format nil)
(global-display-line-numbers-mode)
(add-to-list 'default-frame-alist '(undecorated . t))
(blink-cursor-mode 0)    ; Disable blinking cursor
(scroll-bar-mode -1)     ; Disable visible scrollbar
(tool-bar-mode -1)       ; Disable the toolbar
; (tooltip-mode -1)      ; Disable tooltips
(menu-bar-mode 1)       ; Disable the menubar
(setq ring-bell-function 'ignore) ; bell sound
(setq visible-bell nil)           ; shows visible bell

;; Remove All Padding
(setq-default left-margin-width 0 right-margin-width 0)
(set-window-margins (selected-window) 0 0)
(fringe-mode 0)

;; FONT
(set-face-attribute 'default nil
		    :font "Iosevka Nerd Font"
		    :height 200)

;; THEME
(use-package gruber-darker-theme
  :ensure t)
;;(load-theme 'gruber-darker t)


;; KEYMAPS
(windmove-default-keybindings) ; Shift + arrow keys move between windows

(defun scroll-up-20-percent ()
  "Scroll up 20% of the window height."
  (interactive)
  (scroll-up-command (floor (* 0.2 (window-body-height)))))

(defun scroll-down-20-percent ()
  "Scroll down 20% of the window height."
  (interactive)
  (scroll-down-command (floor (* 0.2 (window-body-height)))))
(global-set-key (kbd "C-v") 'scroll-up-20-percent)
(global-set-key (kbd "M-v") 'scroll-down-20-percent)

;; EVIL MODE
(use-package evil
  :ensure t
  :defer t   ;; donâ€™t load immediately
  :commands (evil-mode)  ;; allow on-demand loading
  :config
  (evil-mode 1))  ;; only runs when evil-mode is activated
;; Optional: bind to a key
(global-set-key (kbd "<f6>") 'evil-mode)
;; Enable evil-mode for text/code files
;(add-hook 'text-mode-hook 'evil-local-mode)
;(add-hook 'prog-mode-hook 'evil-local-mode)
;; VIM KEYMAPS


(use-package eglot
  :ensure t
  :hook ((c-mode . eglot-ensure)
	 (c++-mode . eglot-ensure)
	 (python-mode . eglot-ensure)
	 (go-mode . eglot-ensure))
  :config
;; Performance: disable event logging
(setq eglot-events-buffer-size 0)
;; Shutdown server when last buffer closes
(setq eglot-autoshutdown t))
